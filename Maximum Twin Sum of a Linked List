# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        #finding the midpoint
        dummy = ListNode(0)
        dummy.next = head
        slow,fast = dummy, head
        while fast:
            slow = slow.next
            fast = fast.next.next if fast.next else None
    
        prev = None
        cur = slow.next
        while cur:
            temp = cur.next
            cur.next = prev
            prev= cur
            cur = temp
        
        res  = 0
        cur = head
        while prev:
            res = max(prev.val + cur.val, res)
            prev = prev.next
            cur = cur.next
        return res
